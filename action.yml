name: run-digger
description: Run Digger for OpenTofu/Terraform management (optimized build)

inputs:
  digger-spec:
    description: "The spec to pass onto digger cli"
    required: false
    default: ''
  aws-access-key-id:
    description: AWS access key id
    required: true
  aws-secret-access-key:
    description: AWS secret access key
    required: true
  aws-endpoint-url:
    description: AWS endpoint URL
    required: true
  aws-region:
    description: AWS region
    required: false
    default: us-east-1
  aws-bucket:
    description: S3 bucket for plan uploads
    required: true
  digger-version:
    description: Version of digger to use (must match a release tag)
    required: false
    default: 'v0.6.62'  # Update this to latest stable version

runs:
  using: composite
  steps:
    - name: Download Digger CLI
      shell: bash
      run: |
        # Determine OS and architecture
        OS=$(echo "$RUNNER_OS" | tr '[:upper:]' '[:lower:]')
        ARCH=$(echo "$RUNNER_ARCH" | sed 's/X64/amd64/g' | sed 's/ARM64/arm64/g')
        
        # Download appropriate binary
        BINARY_URL="https://github.com/diggerhq/digger/releases/download/${{ inputs.digger-version }}/digger-cli-${OS}-${ARCH}"
        if [ "$OS" = "windows" ]; then
          BINARY_URL="${BINARY_URL}.exe"
        fi
        
        echo "Downloading from: $BINARY_URL"
        curl -L "$BINARY_URL" -o digger
        chmod +x digger
        
        # Add to PATH
        echo "$GITHUB_WORKSPACE" >> $GITHUB_PATH

    - name: Setup OpenTofu
      uses: opentofu/setup-opentofu@v1.0.3
      with:
        tofu_version: v1.6.1
        tofu_wrapper: false

    - name: Configure AWS Credentials
      shell: bash
      run: |
        # Set AWS credentials as environment variables
        export AWS_ACCESS_KEY_ID='${{ inputs.aws-access-key-id }}'
        export AWS_SECRET_ACCESS_KEY='${{ inputs.aws-secret-access-key }}'
        export AWS_ENDPOINT_URL='${{ inputs.aws-endpoint-url }}'
        export AWS_REGION='${{ inputs.aws-region }}'
        
        # Run Digger with minimal configuration
        digger_args=(
          --no-backend
          --upload-destination aws
          --s3-bucket "${{ inputs.aws-bucket }}"
        )
        
        if [ ! -z "${{ inputs.digger-spec }}" ]; then
          digger_args+=("--spec" "${{ inputs.digger-spec }}")
        fi
        
        ./digger "${digger_args[@]}"

branding:
  icon: terminal
  color: purple